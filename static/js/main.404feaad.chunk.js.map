{"version":3,"sources":["components/SearchBox.js","components/MCard.js","components/MCardList.js","App.js","serviceWorker.js","index.js"],"names":["SearchTitle","react_default","a","createElement","className","type","placeholder","SearchGenre","value","SearchSortTarget","SearchBox","Component","MCard","downloadTorrentFile","fileURL","document","href","download","_this","props","title","style","display","body","appendChild","click","backgroundImage","concat","this","bgimg","MCardPoster","url","poster","MCardTitle","year","rating","MCardGenre","genres","MCardSynopsis","synopsis","MCard_MCardTorrents","fileList","torrents","sendTorrentFile","bind","_ref","src","alt","_ref2","_ref3","map","data","index","key","_ref4","lib_default","text","maxLine","ellipsis","trimRight","basedOn","MCardTorrents","getTorrentFile","_this2","_this3","size","seeds","peers","onClick","MCardList","renderMCard","mlist","components_MCard","id","background_image","medium_cover_image","runtime","console","log","App","state","getMovieList","fetch","then","res","json","movies","catch","err","message","components_SearchBox","components_MCardList","setState","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.404feaad.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nclass SearchBox extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"searchBox\">\r\n                <SearchTitle /> \r\n                <div className=\"searchBox__conditions\">\r\n                    <SearchGenre />\r\n                    <SearchSortTarget />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction SearchTitle() {\r\n    return (\r\n        <div className=\"searchBox__condition searchTitle\">\r\n            <input type=\"text\" placeholder=\"Searching...\"></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SearchGenre() {\r\n    return (\r\n        <div className=\"searchBox__condition searchGenre\">\r\n            <span className=\"searchBox__condition-title\">\r\n                Genres :\r\n            </span>\r\n            <select className=\"searchBox__condition-list\">\r\n                <option value=\"action\">Action</option>\r\n                <option value=\"comedy\">Comedy</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SearchSortTarget() {\r\n    return (\r\n        <div className=\"searchBox__condition searchSortTarget\">\r\n            <span className=\"searchBox__condition-title\">\r\n                Sort :\r\n            </span>\r\n            <select className=\"searchBox__condition-list\">\r\n                <option value=\"rating\">Rating</option>\r\n                <option value=\"likes\">Likes</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinesEllipsis from 'react-lines-ellipsis';\r\n\r\nclass MCard extends Component {\r\n\r\n    componentDidMount() {\r\n        // console.log(this.props.torrents);\r\n    }\r\n\r\n    static propTypes ={\r\n        id: PropTypes.number.isRequired,\r\n        bgimg: PropTypes.string.isRequired,\r\n        poster: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        year: PropTypes.number.isRequired,\r\n        runtime: PropTypes.number.isRequired,\r\n        genres: PropTypes.array.isRequired,\r\n        rating: PropTypes.number.isRequired,\r\n        synopsis: PropTypes.string.isRequired,\r\n        torrents: PropTypes.array\r\n    }   \r\n\r\n    downloadTorrentFile = (fileURL) => {\r\n        const a = document.createElement(\"a\");\r\n        a.href = fileURL;\r\n        a.download = this.props.title\r\n        a.style.display= 'none';\r\n        document.body.appendChild(a);\r\n        a.click();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"mCard\" style={{backgroundImage: `url(${this.props.bgimg})`}}>\r\n                <div className=\"mCard__box\">\r\n                    <MCardPoster url={this.props.poster} />\r\n                    <div className=\"mCard__info\">\r\n                        <MCardTitle title={this.props.title} \r\n                                    year={this.props.year} \r\n                                    rating={this.props.rating} />\r\n                        <MCardGenre genres={this.props.genres} />\r\n                        <MCardSynopsis synopsis={this.props.synopsis} />\r\n                        <MCardTorrents fileList={this.props.torrents} \r\n                                       sendTorrentFile={this.downloadTorrentFile.bind(this)} />\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nfunction MCardPoster({url}) {\r\n    return(\r\n        <div className=\"mCardPoster\">\r\n            <img src={url} alt=\"\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MCardTitle({title,year, rating}) {\r\n    return(\r\n        <div className=\"mCardTitle\">\r\n            <span className=\"mCardTitle__title\">{title} ({year})</span>\r\n            <span className=\"mCardTitle__rating\">\r\n                <i className=\"fas fa-star\"></i>\r\n                <span>{rating}</span>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction  MCardGenre({genres}) {\r\n    return (\r\n        <ul className=\"mCardGenres\">\r\n            {\r\n                genres.map((data, index)=>{\r\n                    return (\r\n                        <li className=\"mCardGenre\" key={index}>#{data}</li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nfunction MCardSynopsis({synopsis}) {\r\n    return (\r\n        <LinesEllipsis className=\"mCardSynopsis\"\r\n                       text={synopsis}\r\n                       maxLine='6'\r\n                       ellipsis=\"...\"\r\n                       trimRight\r\n                       basedOn='letters' />\r\n        \r\n    );\r\n}\r\n\r\nclass MCardTorrents extends Component {\r\n\r\n    static propTypes = {\r\n        fileList: PropTypes.array\r\n    }\r\n\r\n    getTorrentFile = (fileURL) => {\r\n        this.props.sendTorrentFile(fileURL, this.props.title);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"mCardTorrents\">\r\n            {\r\n                this.props.fileList.map((data,index)=>{\r\n                    return (\r\n                        <li className=\"mCardTorrent\" \r\n                            key={index}\r\n                            title={ data.size + ' / ' + data.seeds + ' seeds, ' + data.peers + ' peers' }\r\n                            onClick={()=>this.getTorrentFile(data.url)}>\r\n                                <i className=\"fas fa-file-download\"></i>\r\n                        </li>\r\n                    )\r\n                })\r\n            }    \r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MCard;\r\n","import React, { Component } from 'react';\r\nimport MCard from './MCard';\r\n\r\nclass MCardList extends Component {\r\n\r\n    componentDidUpdate() {\r\n        if( this.props.mlist ) {\r\n            console.log(this.props.mlist);\r\n        } else {\r\n            console.log(\"nothing..\");\r\n        }\r\n    }\r\n\r\n    renderMCard = () => {\r\n        return this.props.mlist.map( (data) => {\r\n            return <MCard key={data.id}\r\n                          id={data.id}\r\n                          bgimg={data.background_image}\r\n                          poster={data.medium_cover_image}\r\n                          title={data.title} \r\n                          year={data.year}\r\n                          runtime={data.runtime}\r\n                          genres={data.genres}\r\n                          rating={data.rating}\r\n                          synopsis={data.synopsis}\r\n                          torrents={data.torrents}\r\n                          />\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"mCardList\">\r\n            {this.props.mlist?this.renderMCard():\"now loading..\"}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MCardList;\r\n","import React, { Component } from 'react';\nimport SearchBox from  \"./components/SearchBox\";\nimport MCardList from \"./components/MCardList\";\nimport \"./assets/css/main.css\";\n\nclass App extends Component \n{\n  state = {\n  };\n\n  render() {\n    return(\n      <div className=\"app\">\n        <SearchBox id=\"searchBox\"/>\n        <MCardList id=\"mcardList\" mlist={this.state.mlist} />\n      </div>\n    )\n  }\n\n  getMovieList = () => {\n    return (\n      fetch(\"https://yts.lt/api/v2/list_movies.json?sort_by=like_count\")\n      .then(res=>res.json())\n      .then(json=>json.data.movies)\n      .catch(err=>{\n        console.log(err.message);\n      })\n    )\n  }\n\n  async componentDidMount() {\n    this.setState({\n      mlist: await this.getMovieList()\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}